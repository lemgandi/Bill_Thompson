# Configuration for urlshifter.py
# Charles Shapiro 9 Apr 2019
[urlshifter]
# Input url path -- look for id strings in URLs to this site.
inPath=http://wc.rootsweb.ancestry.com

# Output url mask -- substitute this for inPath if you find a matching input url path containing an ID
# which you can identify in your "tableFile", below.  The "%s" will be replaced with the output ID.
outPath=https://www.wikitree.com/%s

# CSV file of input and output ids.
# If I find an "input_id" in this table, I will substitute its "output_id" in the "outPath".
# Format is "name,input_id,output_id" If I cannot find an input_id, I will leave the input URL unchanged.
# If I find an input_id in this table but the output_id is null, I will also leave the input URL unchanged.
tableFile=../tables/TreeLinkMappingTable20190412.csv

# Where to complain if something goes Wrong.
# "not found in id list" means I found an input ID with no corresponding id in the "tableFile".
# ( this url is unchanged in the output HTML)
# "Oops..." means I read a link tag but could not understand it (e.g. "<a href=></a>")
# I have tried to leave these unchanged in the output HTML with varying success.  
# "Is Weird" means I found an input URL path which contained no input_id I could recognize.
# These are unchanged in the output HTML.
exceptFile=./exceptions.txt

# Open the exceptions file in this mode: 'a' if we are running from a script, 'w' if we are testing
# Warning! 'w' will destroy the previous contents of this file!
exceptFileMode=a

# Regular expressions to parse the input_id out of the input URL.  These get applied
# in numeric order. For a url like:
# http://wc.rootsweb.ancestry.com/cgi-bin/igm.cgi?op=GET&amp;db=capane&amp;id=I967">Allen
# inptRE0 will return "id=I967", then inptRE1 will return "967".  You can string together an arbitrary
# number of "inptRE99=..." expressions to find the string you need. The output of the final expression must be
# the input_id you seek.
inptRE0=id=I[0-9]+
inptRE1=[0-9]+